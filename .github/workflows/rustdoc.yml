name: RustDoc Deploy

on:
  # When a PR is merged (or force push to main)
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Enable cargo logs to be in colour
env:
  CARGO_TERM_COLOR: always

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # -=-=-=-= Rustdocs =-=-=-=-
      - name: Build rustdocs
        run: cargo doc

      # -=-=-=-= Strictdoc =-=-=-=-
      - name: Install python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.12
      - name: Install strictdoc
        run: pip install strictdoc
      - name: Export requirements
        run: strictdoc export ./requirements/requirements.sdoc

      # -=-=-=-= Preparation =-=-=-=-
      - name: Prepare web files
        run: mkdir web && mv ./target/doc/ ./web/rustdocs/ && mv ./requirements/output/html/ ./web/strictdoc/
      - name: Prepare landing page
        run: echo "todo"

      # -=-=-=-= Deploy =-=-=-=-
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './target/doc'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
